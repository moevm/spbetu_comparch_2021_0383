Microsoft (R) Macro Assembler Version 5.10                  12/7/21 15:11:45
                                                             Page     1-1


				; –ó–∞–¥–∞–Ω–∏–µ 1e
				; 08h - –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ –æ—Ç —Å–∏—Å—Ç–µ–º–
				Ω–æ–≥–æ —Ç–∞–π–º–µ—Ä–∞
				; –ß—Ç–µ–Ω–∏–µ –∏ –≤—ã–≤–æ–¥ –Ω–∞ —ç–∫—Ä–∞–Ω –æ
				—Ç—Å—á–µ—Ç–∞ —á–∞—Å–æ–≤ —Ä–µ–∞–ª—å–Ω–æ–≥–æ 
				; –≤—Ä–µ–º–µ–Ω–∏ –∏–∑ –ø–∞–º—è—Ç–∏ CMOS (—Ñ–æ—Ä
				–º–∞—Ç BSD)
				
				ASSUME CS:CODE, DS:DATA, SS:STACK
				
 0000				STACK SEGMENT STACK
 0000  0400[				DW 1024 DUP(?)
	   ????			
			 ]	
				
 0800				STACK ENDS
				
 0000				DATA SEGMENT
 0000  0000				KEEP_CS DW 0 		; –•—Ä–∞–Ω–µ–Ω–
				∏–µ —Å–µ–≥–º–µ–Ω—Ç–∞
 0002  0000				KEEP_IP DW 0		; –•—Ä–∞–Ω–µ–Ω–
				∏–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞
 0004  0000				KEEP_AX DW 0
 0006  0000				KEEP_SS DW 0
 0008  0000				KEEP_SP DW 0
 000A				DATA ENDS
				
 0000				CODE SEGMENT
				.186
 0000				SUBR_INT PROC FAR
 0000					start:
 0000  A3 0004 R			mov 	KEEP_AX, ax
 0003  8C 16 0006 R			mov 	KEEP_SS, ss
 0007  89 26 0008 R			mov 	KEEP_SP, sp
 000B  BC 0000 R			mov 	sp, OFFSET start
 000E  B8 ---- R			mov 	ax, SEG STACK
 0011  8E D0				mov 	ss, ax
 0013  A1 0004 R			mov 	ax, KEEP_AX
					
 0016  50				push 	ax
 0017  1E				push 	ds
 0018  B8 ---- R			mov 	ax, SEG SUBR_INT
 001B  8E D8				mov 	ds, ax
 001D  A1 0004 R			mov 	ax, KEEP_AX
 0020  B4 29				mov 	ah, 29h			; –§—É–
				Ω–∫—Ü–∏—è –≤—ã–≤–æ–¥–∞ —Å—Ç—Ä–æ–∫–∏
 0022  B0 0B				mov 	al, 0Bh			; CMOS:
				 —Ä–µ–≥–∏—Å—Ç—Ä —Å–æ—Å—Ç–æ—è–Ω–∏—è B
 0024  E6 70				out 	70h, al			; CMOS:
				 –∏–Ω–¥–µ–∫—Å
 0026  E4 71				in 	al, 71h			; CMOS:
				 –¥–∞–Ω–Ω—ã–µ
 0028  24 FB				and     al, 11111011b   	; –û–±–
				Ω—É–ª–µ–Ω–∏–µ 2-–≥–æ –±–∏—Ç–∞
Microsoft (R) Macro Assembler Version 5.10                  12/7/21 15:11:45
                                                             Page     1-2


 002A  E6 71			        out     71h, al         	; –ó–∞–
				ø–∏—Å—å –±–∏—Ç–∞ –æ–±—Ä–∞—Ç–Ω–æ
 002C  B0 04			        mov     al, 4           	; CMOS:
				 —á–∞—Å
 002E  E8 0066 R		        call    print_CMOS
 0031  B0 68			        mov     al, 'h'
 0033  CD 29			        int     29h
 0035  B0 20			        mov     al, ' '
 0037  CD 29			        int     29h
 0039  B0 02			        mov     al, 2           	; CMOS:
				 –º–∏–Ω—É—Ç–∞
 003B  E8 0066 R		        call    print_CMOS
 003E  B0 6D			        mov     al, 'm'
 0040  CD 29			        int     29h
 0042  B0 20				mov 	al, ' '
 0044  CD 29				int 	29h
 0046  B0 00			        mov     al, 0           	; CMOS:
				 —Å–µ–∫—É–Ω–¥–∞
 0048  E8 0066 R		        call    print_CMOS
 004B  B0 73				mov 	al, 's'
 004D  CD 29				int 	29h
 004F  B0 09				mov 	al, '	'
 0051  CD 29				int 	29h
				        
					; –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–µ–≥–∏
				—Å—Ç—Ä–æ–≤
 0053  1F				pop 	ds
 0054  58				pop 	ax 
 0055  8B 26 0008 R		    	mov 	sp, KEEP_SP
 0059  A1 0006 R			mov 	ax, KEEP_SS
 005C  8E D0			    	mov 	ss, ax
 005E  A1 0004 R		    	mov 	ax, KEEP_AX
 0061  B0 20				mov 	al, 20h  
 0063  E6 20				out 	20h, al
 0065  CF				iret	
 0066				SUBR_INT ENDP
				
				; –ü—Ä–æ—Ü–µ–¥—É—Ä–∞ –ø–µ—á–∞—Ç–∏ –≤—Ä–µ–º–µ–Ω–
				∏ –∏–∑ –ø–∞–º—è—Ç–∏ CMOS
				; –í—ã–≤–æ–¥–∏—Ç –Ω–∞ —ç–∫—Ä–∞–Ω —Å–æ–¥–µ—Ä–∂–∏
				–º–æ–µ —è—á–µ–π–∫–∏ CMOS —Å –Ω–æ–º–µ—Ä–æ–º –≤ A
				L
 0066				print_CMOS PROC NEAR
 0066  E6 70				out 	70h, al			; –°MOS
				: –ø–æ—Å–ª–∞—Ç—å AL –≤ –∏–Ω–¥–µ–∫—Å–Ω—ã–π –ø–æ—
				Ä—Ç
 0068  E4 71				in 	al, 71h			; CMOS:
				 –ø—Ä–æ—á–∏—Ç–∞—Ç—å –¥–∞–Ω–Ω—ã–µ
 006A  50				push 	ax
 006B  C0 E8 04				shr 	al, 4
 006E  04 30				add 	al, '0'
 0070  CD 29				int 	29h
 0072  58				pop 	ax
 0073  24 0F				and 	al, 0Fh
Microsoft (R) Macro Assembler Version 5.10                  12/7/21 15:11:45
                                                             Page     1-3


 0075  04 30				add 	al, 30h
 0077  CD 29				int 	29h
 0079  C3				ret
 007A				print_CMOS ENDP
				
				; –ì–æ–ª–æ–≤–Ω–∞—è –ø—Ä–æ—Ü–µ–¥—É—Ä–∞
 007A				Main PROC FAR
					; –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∞–¥—Ä–µ—Å–∞ –Ω–
				∞—á–∞–ª–∞ PSP
 007A  1E				push 	ds
 007B  2B C0				sub 	ax, ax
 007D  50				push 	ax
 007E  B8 ---- R			mov 	ax, DATA
 0081  8E D8				mov 	ds, ax
				
					; –ó–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥
				–æ –≤–µ–∫—Ç–æ—Ä–∞ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è
 0083  B4 35				mov 	ah, 35h   		; –í–æ–
				∑–≤—Ä–∞—â–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –∑–Ω–∞—á–µ–Ω
				–∏—è –≤–µ–∫—Ç–æ—Ä–∞ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è
 0085  B0 08				mov 	al, 08h   		; –ó–∞–
				Ω–æ—Å–∏–º –Ω–æ–º–µ—Ä –≤–µ–∫—Ç–æ—Ä–∞
 0087  CD 21				int 	21h
 0089  89 1E 0002 R			mov 	KEEP_IP, bx  		; –ó–∞–
				ø–æ–º–∏–Ω–∞–Ω–∏–µ —Å–º–µ—â–µ–Ω–∏—è
 008D  8C 06 0000 R			mov 	KEEP_CS, es  		; –ó–∞–
				ø–æ–º–∏–Ω–∞–Ω–∏–µ —Å–º–µ—â–µ–Ω–∏—è
					
					; –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–µ–∫—Ç–æ—Ä–∞ –ø—
				Ä–µ—Ä—ã–≤–∞–Ω–∏—è
 0091  1E				push 	ds
 0092  BA 0000 R			mov 	dx, OFFSET SUBR_INT 	; –°–º–
				µ—â–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ—Ü–µ–¥—É—Ä—ã –≤ DX
 0095  B8 ---- R			mov 	ax, SEG SUBR_INT    	; –°–µ–
				≥–º–µ–Ω—Ç –ø—Ä–æ—Ü–µ–¥—É—Ä—ã
 0098  8E D8				mov 	ds, ax          	; –ü–æ–
				º–µ—â–µ–Ω–∏–µ –≤ DS
 009A  B4 25				mov 	ah, 25h         	; –§—É–
				Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤–µ–∫—Ç–æ—Ä–∞
 009C  B0 08				mov 	al, 08h         	; –ù–æ–
				º–µ—Ä –≤–µ–∫—Ç–æ—Ä–∞
 009E  CD 21				int 	21h             	; –°–º–
				µ–Ω–∞ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è
 00A0  1F				pop 	ds
				
					; –í—ã–∑–æ–≤ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è
 00A1  CD 08				int 	08h
				
					; –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑–Ω–∞
				—á–∞–ª—å–Ω–æ–≥–æ –≤–µ–∫—Ç–æ—Ä–∞ –ø—Ä–µ—Ä—ã–≤–∞–
				Ω–∏—è
 00A3  FA				cli				; –°–±—
				Ä–æ—Å IF
 00A4  1E				push 	ds
Microsoft (R) Macro Assembler Version 5.10                  12/7/21 15:11:45
                                                             Page     1-4


 00A5  8B 16 0002 R			mov 	dx, KEEP_IP
 00A9  A1 0000 R			mov 	ax, KEEP_CS
 00AC  8E D8				mov 	ds, ax
 00AE  B4 25				mov 	ah, 25h
 00B0  B0 00				mov 	al, 0h
 00B2  CD 21				int 	21h         		; –í–æ—
				Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –≤–µ–∫—Ç–æ—Ä–∞
 00B4  1F				pop 	ds
 00B5  FB				sti				; –£—Å—
				Ç–∞–Ω–æ–≤–∫–∞ IF
					
 00B6  B4 4C				mov 	ah, 4ch
 00B8  CD 21				int 21h
 00BA				Main ENDP
 00BA				CODE ENDS
				END Main
Microsoft (R) Macro Assembler Version 5.10                  12/7/21 15:11:45
                                                             Symbols-1


Segments and Groups:

                N a m e         	Length	 Align	Combine Class

CODE . . . . . . . . . . . . . .  	00BA	PARA	NONE	
DATA . . . . . . . . . . . . . .  	000A	PARA	NONE	
STACK  . . . . . . . . . . . . .  	0800	PARA	STACK	

Symbols:            

                N a m e         	Type	 Value	 Attr

KEEP_AX  . . . . . . . . . . . .  	L WORD	0004	DATA
KEEP_CS  . . . . . . . . . . . .  	L WORD	0000	DATA
KEEP_IP  . . . . . . . . . . . .  	L WORD	0002	DATA
KEEP_SP  . . . . . . . . . . . .  	L WORD	0008	DATA
KEEP_SS  . . . . . . . . . . . .  	L WORD	0006	DATA

MAIN . . . . . . . . . . . . . .  	F PROC	007A	CODE	Length = 0040

PRINT_CMOS . . . . . . . . . . .  	N PROC	0066	CODE	Length = 0014

START  . . . . . . . . . . . . .  	L NEAR	0000	CODE
SUBR_INT . . . . . . . . . . . .  	F PROC	0000	CODE	Length = 0066

@CPU . . . . . . . . . . . . . .  	TEXT  259		
@FILENAME  . . . . . . . . . . .  	TEXT  lab5		
@VERSION . . . . . . . . . . . .  	TEXT  510		


    135 Source  Lines
    135 Total   Lines
     17 Symbols

  48020 + 457190 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
