Microsoft (R) Macro Assembler Version 5.10                  12/16/21 03:15:5
                                                             Page     1-1


 0000				DATA SEGMENT
 0000  0000			        KEEP_CS DW 0 ; –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è 
				—Å–µ–≥–º–µ–Ω—Ç–∞
 0002  0000			        KEEP_IP DW 0 ; –∏ —Å–º–µ—â–µ–Ω–∏—è –≤–µ
				–∫—Ç–æ—Ä–∞ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è
 0004  0000					TMP1 DW 0
 0006  0000					TMP2 DW 0
 0008  0000					TMP3 DW 0
 000A  53 61 6D 70 6C 65	        mes   DB 'Sample text',10,13,'$'
       20 74 65 78 74 0A	
       0D 24			
 0018  45 6E 64 0A 0D 24			mes_end   DB 'End',10,13,'$'
				
 001E				DATA ENDS
				
				
 0000				Stack    SEGMENT  STACK
 0000  000C[			          DW 12 DUP(?)
	   ????			
			 ]	
				
 0018				Stack    ENDS
				
				
				
 0000				CODE      SEGMENT
				          ASSUME CS:Code, DS:DATA, SS:Stack
				
 0000				WriteMsg PROC NEAR
 0000  B4 09				MOV AH,9
 0002  CD 21				int 21h
 0004  C3				ret
 0005				WriteMsg ENDP
				
 0005				MY_INT PROC FAR
 0005  EB 43 90			        jmp start
				
 0008  0000			        ST_SS DW 0000
 000A  0000			        ST_AX DW 0000
 000C  0000			        ST_SP DW 0000
 000E  001E[			        IStack DW 30 DUP(?)
	   ????			
			 ]	
				
 004A				start:
				
 004A  2E: 89 26 000C R		        mov ST_SP, SP
 004F  2E: A3 000A R			mov ST_AX, AX
 0053  8C D0				mov AX, SS
 0055  2E: A3 0008 R			mov ST_SS, AX
 0059  B8 ---- R			mov AX, Stack
 005C  8E D0				mov SS, AX
 005E  2E: A1 000A R			mov AX, ST_AX
 0062  50				push ax
Microsoft (R) Macro Assembler Version 5.10                  12/16/21 03:15:5
                                                             Page     1-2


 0063  1E				push ds
					
 0064  BA 000A R			MOV   DX, OFFSET mes
 0067					metka:
 0067  E8 0000 R			call WriteMsg  ; –í—ã–≤–æ–¥ —Å–æ–æ–±—â–
				µ–Ω–∏—è
 006A  E2 FB				loop metka ; –ó–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–
				æ —Ä–∞–∑
				
 006C  BF 0020				mov di,32
 006F  B4 00				mov ah,0
 0071  CD 1A				int 1Ah
 0073  8B DA				mov bx,dx; —Å—á–µ—Ç—á–∏–∫ —Å –º–æ–º–µ–Ω
				—Ç–∞ —Å–±—Ä–æ—Å–∞
 0075				Delay:
 0075  B4 00				mov ah,0
 0077  CD 1A				int 1Ah
 0079  2B D3				sub dx,bx
 007B  3B FA				cmp di,dx
 007D  77 F6				ja Delay;–ø–µ—Ä–µ—Ö–æ–¥,–µ—Å–ª–∏ –±–æ–ª
				—å—à–µ
					
 007F  BA 0018 R			MOV DX, OFFSET mes_end ;–í—ã–≤–æ–¥ —Å–æ
				–æ–±—â–µ–Ω–∏—è –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –æ–±—Ä–∞
				–±–æ—Ç—á–∏–∫–∞
 0082  B4 09				MOV AH,9
 0084  CD 21				int 21h
 0086  5A				pop dx
 0087  58			        pop ax
 0088  2E: A3 000A R			mov ST_AX,AX
 008C  2E: A1 0008 R			mov AX,ST_SS
 0090  8E D0				mov SS,AX
 0092  2E: 8B 26 000C R			mov SP,ST_SP
 0097  2E: A1 000A R			mov AX,ST_AX
 009B  B0 20				mov al,20h
 009D  E6 20				out 20h,al
				       
 009F  CF				iret
 00A0				MY_INT ENDP
				
				
 00A0				Main      PROC  FAR
				
 00A0  1E			        push  DS       ;\  –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
				 –∞–¥—Ä–µ—Å–∞ –Ω–∞—á–∞–ª–∞ PSP –≤ —Å—Ç–µ–∫–µ
 00A1  2B C0			        sub   AX,AX    ; > –¥–ª—è –ø–æ—Å–ª–µ–¥—
				É—é—â–µ–≥–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ
 00A3  50			        push  AX       ;/  –∫–æ–º–∞–Ω–¥–µ ret, 
				–∑–∞–≤–µ—Ä—à–∞—é—â–µ–π –ø—Ä–æ—Ü–µ–¥—É—Ä—É.
 00A4  B8 ---- R		        mov   AX,DATA             ; –ó–∞–≥—Ä—É–
				∑–∫–∞ —Å–µ–≥–º–µ–Ω—Ç–Ω–æ–≥–æ
 00A7  8E D8			        mov   DS,AX               ; —Ä–µ–≥–∏—Å—
				Ç—Ä–∞ –¥–∞–Ω–Ω—ã—Ö.
				
Microsoft (R) Macro Assembler Version 5.10                  12/16/21 03:15:5
                                                             Page     1-3


 00A9  B4 35			        MOV AH, 35H ; —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á
				–µ–Ω–∏—è –≤–µ–∫—Ç–æ—Ä–∞
 00AB  B0 60			        MOV AL, 60H ; –Ω–æ–º–µ—Ä –≤–µ–∫—Ç–æ—Ä–∞
 00AD  CD 21			        INT 21H ; –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—É
				—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤–µ–∫—Ç–æ—Ä–∞ –ø—Ä–µ—Ä
				—ã–≤–∞–Ω–∏—è
 00AF  89 1E 0002 R		        MOV KEEP_IP, BX ; –∑–∞–ø–æ–º–∏–Ω–∞–Ω–∏–
				µ —Å–º–µ—â–µ–Ω–∏—è
 00B3  8C 06 0000 R		        MOV KEEP_CS, ES ; –∏ —Å–µ–≥–º–µ–Ω—Ç–∞ –
				≤–µ–∫—Ç–æ—Ä–∞ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è
				
 00B7  1E			        PUSH DS
 00B8  BA 0005 R		        MOV DX, OFFSET MY_INT ; —Å–º–µ—â–µ–Ω–∏–
				µ –¥–ª—è –ø—Ä–æ—Ü–µ–¥—É—Ä—ã –≤ DX
 00BB  B8 ---- R		        MOV AX, SEG MY_INT ; —Å–µ–≥–º–µ–Ω—Ç –ø—
				Ä–æ—Ü–µ–¥—É—Ä—ã
 00BE  8E D8			        MOV DS, AX ; –ø–æ–º–µ—â–∞–µ–º –≤ DS
 00C0  B4 25			        MOV AH, 25H ; —Ñ—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω
				–æ–≤–∫–∏ –≤–µ–∫—Ç–æ—Ä–∞
 00C2  B0 60			        MOV AL, 60H ; –Ω–æ–º–µ—Ä –≤–µ–∫—Ç–æ—Ä–∞
 00C4  CD 21			        INT 21H ; –º–µ–Ω—è–µ–º –ø—Ä–µ—Ä—ã–≤–∞–Ω
				–∏–µ
 00C6  1F			        POP DS
						
 00C7  B9 0003				mov cx, 3
 00CA  CD 60			        int 60H; –≤—ã–∑–æ–≤ –∏–∑–º–µ–Ω–µ–Ω–Ω–æ–
				≥–æ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è
				
 00CC  FA			        CLI
 00CD  1E			        PUSH DS
 00CE  8B 16 0002 R		        MOV DX, KEEP_IP
 00D2  A1 0000 R		        MOV AX, KEEP_CS
 00D5  8E D8			        MOV DS, AX
 00D7  B4 25			        MOV AH, 25H
 00D9  B0 60			        MOV AL, 60H
 00DB  CD 21			        INT 21H ; –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–
				º —Å—Ç–∞—Ä—ã–π –≤–µ–∫—Ç–æ—Ä –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—
				è
 00DD  1F			        POP DS
 00DE  FB			        STI		
				
 00DF  CB			        RET
 00E0				Main      ENDP
 00E0				CODE      ENDS
				          END Main
Microsoft (R) Macro Assembler Version 5.10                  12/16/21 03:15:5
                                                             Symbols-1


Segments and Groups:

                N a m e         	Length	 Align	Combine Class

CODE . . . . . . . . . . . . . .  	00E0	PARA	NONE	
DATA . . . . . . . . . . . . . .  	001E	PARA	NONE	
STACK  . . . . . . . . . . . . .  	0018	PARA	STACK	

Symbols:            

                N a m e         	Type	 Value	 Attr

DELAY  . . . . . . . . . . . . .  	L NEAR	0075	CODE

ISTACK . . . . . . . . . . . . .  	L WORD	000E	CODE	Length = 001E

KEEP_CS  . . . . . . . . . . . .  	L WORD	0000	DATA
KEEP_IP  . . . . . . . . . . . .  	L WORD	0002	DATA

MAIN . . . . . . . . . . . . . .  	F PROC	00A0	CODE	Length = 0040
MES  . . . . . . . . . . . . . .  	L BYTE	000A	DATA
MES_END  . . . . . . . . . . . .  	L BYTE	0018	DATA
METKA  . . . . . . . . . . . . .  	L NEAR	0067	CODE
MY_INT . . . . . . . . . . . . .  	F PROC	0005	CODE	Length = 009B

START  . . . . . . . . . . . . .  	L NEAR	004A	CODE
ST_AX  . . . . . . . . . . . . .  	L WORD	000A	CODE
ST_SP  . . . . . . . . . . . . .  	L WORD	000C	CODE
ST_SS  . . . . . . . . . . . . .  	L WORD	0008	CODE

TMP1 . . . . . . . . . . . . . .  	L WORD	0004	DATA
TMP2 . . . . . . . . . . . . . .  	L WORD	0006	DATA
TMP3 . . . . . . . . . . . . . .  	L WORD	0008	DATA

WRITEMSG . . . . . . . . . . . .  	N PROC	0000	CODE	Length = 0005

@CPU . . . . . . . . . . . . . .  	TEXT  0101h		
@FILENAME  . . . . . . . . . . .  	TEXT  lr5		
@VERSION . . . . . . . . . . . .  	TEXT  510		


    120 Source  Lines
    120 Total   Lines
     25 Symbols

  48030 + 459230 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
